{
  
    
        "post0": {
            "title": "Title",
            "content": "My page . Criando a minha primeira página de Blog com o Jupyter Notebook . toc: false branch: master badges: false comments: false author: Veronica categories: [blog] . import pandas as pd import numpy as np . data = np.random.randint(0,500,(5,5)) data . array([[226, 205, 437, 484, 140], [119, 278, 246, 287, 411], [ 49, 293, 159, 395, 182], [233, 258, 161, 429, 200], [110, 334, 137, 431, 328]]) . df1 = pd.DataFrame(data) df1 . 0 1 2 3 4 . 0 226 | 205 | 437 | 484 | 140 | . 1 119 | 278 | 246 | 287 | 411 | . 2 49 | 293 | 159 | 395 | 182 | . 3 233 | 258 | 161 | 429 | 200 | . 4 110 | 334 | 137 | 431 | 328 | . df2 = pd.DataFrame(data) df2 . 0 1 2 3 4 . 0 226 | 205 | 437 | 484 | 140 | . 1 119 | 278 | 246 | 287 | 411 | . 2 49 | 293 | 159 | 395 | 182 | . 3 233 | 258 | 161 | 429 | 200 | . 4 110 | 334 | 137 | 431 | 328 | . df3 = pd.DataFrame(data) df3 . 0 1 2 3 4 . 0 226 | 205 | 437 | 484 | 140 | . 1 119 | 278 | 246 | 287 | 411 | . 2 49 | 293 | 159 | 395 | 182 | . 3 233 | 258 | 161 | 429 | 200 | . 4 110 | 334 | 137 | 431 | 328 | .",
            "url": "https://veroberg.github.io/my_first_blog/2021/01/18/Second-Post.html",
            "relUrl": "/2021/01/18/Second-Post.html",
            "date": " • Jan 18, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Title",
            "content": "My page Criando a minha primeira página de Blog com o Jupyter Notebook . toc: false | branch: master | badges: false | comments: false | author: Veronica | categories: [blog] | . import pandas as pd import numpy as np . data = np.random.randint(0,1000,(10,10)) data . array([[ 56, 58, 94, 843, 794, 833, 391, 850, 384, 941], [951, 389, 379, 88, 960, 603, 791, 777, 426, 954], [154, 158, 161, 837, 82, 59, 76, 602, 740, 873], [178, 8, 748, 405, 711, 680, 770, 375, 649, 25], [483, 15, 285, 489, 448, 577, 339, 528, 440, 792], [681, 532, 953, 277, 271, 438, 14, 716, 899, 2], [368, 975, 989, 169, 416, 976, 400, 870, 988, 389], [437, 454, 895, 261, 721, 294, 309, 38, 922, 3], [613, 926, 274, 518, 212, 301, 265, 465, 252, 799], [529, 637, 406, 25, 522, 767, 132, 332, 462, 362]]) . df1 = pd.DataFrame(data) df1 . 0 1 2 3 4 5 6 7 8 9 . 0 56 | 58 | 94 | 843 | 794 | 833 | 391 | 850 | 384 | 941 | . 1 951 | 389 | 379 | 88 | 960 | 603 | 791 | 777 | 426 | 954 | . 2 154 | 158 | 161 | 837 | 82 | 59 | 76 | 602 | 740 | 873 | . 3 178 | 8 | 748 | 405 | 711 | 680 | 770 | 375 | 649 | 25 | . 4 483 | 15 | 285 | 489 | 448 | 577 | 339 | 528 | 440 | 792 | . 5 681 | 532 | 953 | 277 | 271 | 438 | 14 | 716 | 899 | 2 | . 6 368 | 975 | 989 | 169 | 416 | 976 | 400 | 870 | 988 | 389 | . 7 437 | 454 | 895 | 261 | 721 | 294 | 309 | 38 | 922 | 3 | . 8 613 | 926 | 274 | 518 | 212 | 301 | 265 | 465 | 252 | 799 | . 9 529 | 637 | 406 | 25 | 522 | 767 | 132 | 332 | 462 | 362 | . df2 = pd.DataFrame(data) df2 . 0 1 2 3 4 5 6 7 8 9 . 0 56 | 58 | 94 | 843 | 794 | 833 | 391 | 850 | 384 | 941 | . 1 951 | 389 | 379 | 88 | 960 | 603 | 791 | 777 | 426 | 954 | . 2 154 | 158 | 161 | 837 | 82 | 59 | 76 | 602 | 740 | 873 | . 3 178 | 8 | 748 | 405 | 711 | 680 | 770 | 375 | 649 | 25 | . 4 483 | 15 | 285 | 489 | 448 | 577 | 339 | 528 | 440 | 792 | . 5 681 | 532 | 953 | 277 | 271 | 438 | 14 | 716 | 899 | 2 | . 6 368 | 975 | 989 | 169 | 416 | 976 | 400 | 870 | 988 | 389 | . 7 437 | 454 | 895 | 261 | 721 | 294 | 309 | 38 | 922 | 3 | . 8 613 | 926 | 274 | 518 | 212 | 301 | 265 | 465 | 252 | 799 | . 9 529 | 637 | 406 | 25 | 522 | 767 | 132 | 332 | 462 | 362 | . df3 = pd.DataFrame(data) df3 . 0 1 2 3 4 5 6 7 8 9 . 0 56 | 58 | 94 | 843 | 794 | 833 | 391 | 850 | 384 | 941 | . 1 951 | 389 | 379 | 88 | 960 | 603 | 791 | 777 | 426 | 954 | . 2 154 | 158 | 161 | 837 | 82 | 59 | 76 | 602 | 740 | 873 | . 3 178 | 8 | 748 | 405 | 711 | 680 | 770 | 375 | 649 | 25 | . 4 483 | 15 | 285 | 489 | 448 | 577 | 339 | 528 | 440 | 792 | . 5 681 | 532 | 953 | 277 | 271 | 438 | 14 | 716 | 899 | 2 | . 6 368 | 975 | 989 | 169 | 416 | 976 | 400 | 870 | 988 | 389 | . 7 437 | 454 | 895 | 261 | 721 | 294 | 309 | 38 | 922 | 3 | . 8 613 | 926 | 274 | 518 | 212 | 301 | 265 | 465 | 252 | 799 | . 9 529 | 637 | 406 | 25 | 522 | 767 | 132 | 332 | 462 | 362 | .",
            "url": "https://veroberg.github.io/my_first_blog/2021/01/18/Primeiro-post.html",
            "relUrl": "/2021/01/18/Primeiro-post.html",
            "date": " • Jan 18, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://veroberg.github.io/my_first_blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://veroberg.github.io/my_first_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://veroberg.github.io/my_first_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}