{
  
    
        "post0": {
            "title": "My page",
            "content": "import pandas as pd import numpy as np . data = np.random.randint(0,800,(3,3)) data . array([[146, 637, 223], [251, 361, 733], [128, 283, 637]]) . df1 = pd.DataFrame(data) df1 . 0 1 2 . 0 146 | 637 | 223 | . 1 251 | 361 | 733 | . 2 128 | 283 | 637 | . df2 = pd.DataFrame(data) df2 . 0 1 2 . 0 146 | 637 | 223 | . 1 251 | 361 | 733 | . 2 128 | 283 | 637 | . df3 = pd.DataFrame(data) df3 . 0 1 2 . 0 146 | 637 | 223 | . 1 251 | 361 | 733 | . 2 128 | 283 | 637 | .",
            "url": "https://veroberg.github.io/my_first_blog/blog/2021/01/20/Third-Post.html",
            "relUrl": "/blog/2021/01/20/Third-Post.html",
            "date": " • Jan 20, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "My page",
            "content": "import pandas as pd import numpy as np . data = np.random.randint(0,500,(5,5)) data . array([[ 56, 37, 50, 405, 341], [258, 448, 202, 29, 392], [213, 38, 177, 377, 10], [ 22, 86, 223, 421, 311], [455, 495, 81, 25, 404]]) . df1 = pd.DataFrame(data) df1 . 0 1 2 3 4 . 0 56 | 37 | 50 | 405 | 341 | . 1 258 | 448 | 202 | 29 | 392 | . 2 213 | 38 | 177 | 377 | 10 | . 3 22 | 86 | 223 | 421 | 311 | . 4 455 | 495 | 81 | 25 | 404 | . df2 = pd.DataFrame(data) df2 . 0 1 2 3 4 . 0 56 | 37 | 50 | 405 | 341 | . 1 258 | 448 | 202 | 29 | 392 | . 2 213 | 38 | 177 | 377 | 10 | . 3 22 | 86 | 223 | 421 | 311 | . 4 455 | 495 | 81 | 25 | 404 | . df3 = pd.DataFrame(data) df3 . 0 1 2 3 4 . 0 56 | 37 | 50 | 405 | 341 | . 1 258 | 448 | 202 | 29 | 392 | . 2 213 | 38 | 177 | 377 | 10 | . 3 22 | 86 | 223 | 421 | 311 | . 4 455 | 495 | 81 | 25 | 404 | .",
            "url": "https://veroberg.github.io/my_first_blog/blog/2021/01/20/Second-Post.html",
            "relUrl": "/blog/2021/01/20/Second-Post.html",
            "date": " • Jan 20, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "My page",
            "content": "import pandas as pd import numpy as np . data = np.random.randint(0,1000,(10,10)) data . array([[297, 709, 759, 74, 472, 64, 234, 270, 305, 173], [619, 539, 347, 860, 875, 470, 154, 966, 925, 105], [440, 952, 401, 137, 621, 8, 33, 287, 151, 611], [551, 18, 218, 249, 983, 596, 428, 10, 971, 614], [134, 616, 982, 661, 869, 827, 345, 259, 618, 297], [723, 1, 549, 839, 812, 667, 755, 571, 807, 240], [ 85, 562, 721, 225, 719, 219, 555, 601, 974, 604], [253, 842, 962, 898, 582, 353, 704, 182, 554, 792], [298, 415, 382, 825, 398, 75, 955, 726, 629, 303], [648, 976, 578, 6, 369, 767, 150, 772, 82, 889]]) . df1 = pd.DataFrame(data) df1 . 0 1 2 3 4 5 6 7 8 9 . 0 297 | 709 | 759 | 74 | 472 | 64 | 234 | 270 | 305 | 173 | . 1 619 | 539 | 347 | 860 | 875 | 470 | 154 | 966 | 925 | 105 | . 2 440 | 952 | 401 | 137 | 621 | 8 | 33 | 287 | 151 | 611 | . 3 551 | 18 | 218 | 249 | 983 | 596 | 428 | 10 | 971 | 614 | . 4 134 | 616 | 982 | 661 | 869 | 827 | 345 | 259 | 618 | 297 | . 5 723 | 1 | 549 | 839 | 812 | 667 | 755 | 571 | 807 | 240 | . 6 85 | 562 | 721 | 225 | 719 | 219 | 555 | 601 | 974 | 604 | . 7 253 | 842 | 962 | 898 | 582 | 353 | 704 | 182 | 554 | 792 | . 8 298 | 415 | 382 | 825 | 398 | 75 | 955 | 726 | 629 | 303 | . 9 648 | 976 | 578 | 6 | 369 | 767 | 150 | 772 | 82 | 889 | . df2 = pd.DataFrame(data) df2 . 0 1 2 3 4 5 6 7 8 9 . 0 297 | 709 | 759 | 74 | 472 | 64 | 234 | 270 | 305 | 173 | . 1 619 | 539 | 347 | 860 | 875 | 470 | 154 | 966 | 925 | 105 | . 2 440 | 952 | 401 | 137 | 621 | 8 | 33 | 287 | 151 | 611 | . 3 551 | 18 | 218 | 249 | 983 | 596 | 428 | 10 | 971 | 614 | . 4 134 | 616 | 982 | 661 | 869 | 827 | 345 | 259 | 618 | 297 | . 5 723 | 1 | 549 | 839 | 812 | 667 | 755 | 571 | 807 | 240 | . 6 85 | 562 | 721 | 225 | 719 | 219 | 555 | 601 | 974 | 604 | . 7 253 | 842 | 962 | 898 | 582 | 353 | 704 | 182 | 554 | 792 | . 8 298 | 415 | 382 | 825 | 398 | 75 | 955 | 726 | 629 | 303 | . 9 648 | 976 | 578 | 6 | 369 | 767 | 150 | 772 | 82 | 889 | . df3 = pd.DataFrame(data) df3 . 0 1 2 3 4 5 6 7 8 9 . 0 297 | 709 | 759 | 74 | 472 | 64 | 234 | 270 | 305 | 173 | . 1 619 | 539 | 347 | 860 | 875 | 470 | 154 | 966 | 925 | 105 | . 2 440 | 952 | 401 | 137 | 621 | 8 | 33 | 287 | 151 | 611 | . 3 551 | 18 | 218 | 249 | 983 | 596 | 428 | 10 | 971 | 614 | . 4 134 | 616 | 982 | 661 | 869 | 827 | 345 | 259 | 618 | 297 | . 5 723 | 1 | 549 | 839 | 812 | 667 | 755 | 571 | 807 | 240 | . 6 85 | 562 | 721 | 225 | 719 | 219 | 555 | 601 | 974 | 604 | . 7 253 | 842 | 962 | 898 | 582 | 353 | 704 | 182 | 554 | 792 | . 8 298 | 415 | 382 | 825 | 398 | 75 | 955 | 726 | 629 | 303 | . 9 648 | 976 | 578 | 6 | 369 | 767 | 150 | 772 | 82 | 889 | .",
            "url": "https://veroberg.github.io/my_first_blog/blog/2021/01/20/First.html",
            "relUrl": "/blog/2021/01/20/First.html",
            "date": " • Jan 20, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://veroberg.github.io/my_first_blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://veroberg.github.io/my_first_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://veroberg.github.io/my_first_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}