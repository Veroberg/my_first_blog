{
  
    
        "post0": {
            "title": "My page",
            "content": "import pandas as pd import numpy as np . data = np.random.randint(0,1000,(10,10)) data . array([[543, 217, 553, 144, 331, 117, 190, 734, 816, 204], [518, 772, 839, 34, 682, 338, 435, 586, 236, 81], [673, 920, 670, 227, 37, 311, 19, 232, 613, 768], [472, 362, 192, 866, 839, 95, 352, 638, 732, 916], [283, 181, 949, 272, 925, 686, 371, 387, 354, 794], [358, 591, 911, 49, 388, 611, 281, 831, 209, 912], [909, 998, 524, 857, 951, 740, 138, 687, 67, 417], [744, 326, 294, 154, 355, 522, 319, 814, 837, 507], [576, 913, 191, 793, 244, 262, 675, 936, 972, 396], [198, 184, 587, 589, 992, 99, 146, 961, 3, 188]]) . df1 = pd.DataFrame(data) df1 . 0 1 2 3 4 5 6 7 8 9 . 0 543 | 217 | 553 | 144 | 331 | 117 | 190 | 734 | 816 | 204 | . 1 518 | 772 | 839 | 34 | 682 | 338 | 435 | 586 | 236 | 81 | . 2 673 | 920 | 670 | 227 | 37 | 311 | 19 | 232 | 613 | 768 | . 3 472 | 362 | 192 | 866 | 839 | 95 | 352 | 638 | 732 | 916 | . 4 283 | 181 | 949 | 272 | 925 | 686 | 371 | 387 | 354 | 794 | . 5 358 | 591 | 911 | 49 | 388 | 611 | 281 | 831 | 209 | 912 | . 6 909 | 998 | 524 | 857 | 951 | 740 | 138 | 687 | 67 | 417 | . 7 744 | 326 | 294 | 154 | 355 | 522 | 319 | 814 | 837 | 507 | . 8 576 | 913 | 191 | 793 | 244 | 262 | 675 | 936 | 972 | 396 | . 9 198 | 184 | 587 | 589 | 992 | 99 | 146 | 961 | 3 | 188 | . df2 = pd.DataFrame(data) df2 . 0 1 2 3 4 5 6 7 8 9 . 0 543 | 217 | 553 | 144 | 331 | 117 | 190 | 734 | 816 | 204 | . 1 518 | 772 | 839 | 34 | 682 | 338 | 435 | 586 | 236 | 81 | . 2 673 | 920 | 670 | 227 | 37 | 311 | 19 | 232 | 613 | 768 | . 3 472 | 362 | 192 | 866 | 839 | 95 | 352 | 638 | 732 | 916 | . 4 283 | 181 | 949 | 272 | 925 | 686 | 371 | 387 | 354 | 794 | . 5 358 | 591 | 911 | 49 | 388 | 611 | 281 | 831 | 209 | 912 | . 6 909 | 998 | 524 | 857 | 951 | 740 | 138 | 687 | 67 | 417 | . 7 744 | 326 | 294 | 154 | 355 | 522 | 319 | 814 | 837 | 507 | . 8 576 | 913 | 191 | 793 | 244 | 262 | 675 | 936 | 972 | 396 | . 9 198 | 184 | 587 | 589 | 992 | 99 | 146 | 961 | 3 | 188 | . df3 = pd.DataFrame(data) df3 . 0 1 2 3 4 5 6 7 8 9 . 0 543 | 217 | 553 | 144 | 331 | 117 | 190 | 734 | 816 | 204 | . 1 518 | 772 | 839 | 34 | 682 | 338 | 435 | 586 | 236 | 81 | . 2 673 | 920 | 670 | 227 | 37 | 311 | 19 | 232 | 613 | 768 | . 3 472 | 362 | 192 | 866 | 839 | 95 | 352 | 638 | 732 | 916 | . 4 283 | 181 | 949 | 272 | 925 | 686 | 371 | 387 | 354 | 794 | . 5 358 | 591 | 911 | 49 | 388 | 611 | 281 | 831 | 209 | 912 | . 6 909 | 998 | 524 | 857 | 951 | 740 | 138 | 687 | 67 | 417 | . 7 744 | 326 | 294 | 154 | 355 | 522 | 319 | 814 | 837 | 507 | . 8 576 | 913 | 191 | 793 | 244 | 262 | 675 | 936 | 972 | 396 | . 9 198 | 184 | 587 | 589 | 992 | 99 | 146 | 961 | 3 | 188 | .",
            "url": "https://veroberg.github.io/my_first_blog/2021/01/17/_First-Post.html",
            "relUrl": "/2021/01/17/_First-Post.html",
            "date": " • Jan 17, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://veroberg.github.io/my_first_blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://veroberg.github.io/my_first_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://veroberg.github.io/my_first_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}