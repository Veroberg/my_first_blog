{
  
    
        "post0": {
            "title": "My page",
            "content": "import pandas as pd import numpy as np . data = np.random.randint(0,1000,(10,10)) data . array([[128, 673, 220, 297, 412, 837, 827, 112, 701, 53], [747, 177, 632, 428, 575, 77, 756, 935, 876, 253], [589, 104, 280, 374, 379, 28, 240, 443, 295, 153], [323, 368, 251, 598, 43, 907, 200, 659, 358, 908], [ 25, 504, 284, 211, 157, 671, 559, 10, 753, 449], [767, 485, 868, 796, 659, 551, 305, 198, 116, 140], [ 76, 856, 861, 858, 972, 764, 794, 939, 597, 662], [953, 756, 122, 113, 516, 165, 132, 923, 354, 803], [183, 426, 257, 558, 880, 437, 242, 203, 485, 729], [864, 483, 671, 327, 508, 310, 75, 511, 657, 626]]) . Ca1 = pd.DataFrame(data) Ca1 . 0 1 2 3 4 5 6 7 8 9 . 0 128 | 673 | 220 | 297 | 412 | 837 | 827 | 112 | 701 | 53 | . 1 747 | 177 | 632 | 428 | 575 | 77 | 756 | 935 | 876 | 253 | . 2 589 | 104 | 280 | 374 | 379 | 28 | 240 | 443 | 295 | 153 | . 3 323 | 368 | 251 | 598 | 43 | 907 | 200 | 659 | 358 | 908 | . 4 25 | 504 | 284 | 211 | 157 | 671 | 559 | 10 | 753 | 449 | . 5 767 | 485 | 868 | 796 | 659 | 551 | 305 | 198 | 116 | 140 | . 6 76 | 856 | 861 | 858 | 972 | 764 | 794 | 939 | 597 | 662 | . 7 953 | 756 | 122 | 113 | 516 | 165 | 132 | 923 | 354 | 803 | . 8 183 | 426 | 257 | 558 | 880 | 437 | 242 | 203 | 485 | 729 | . 9 864 | 483 | 671 | 327 | 508 | 310 | 75 | 511 | 657 | 626 | . Ca2 = pd.DataFrame(data) Ca2 . 0 1 2 3 4 5 6 7 8 9 . 0 128 | 673 | 220 | 297 | 412 | 837 | 827 | 112 | 701 | 53 | . 1 747 | 177 | 632 | 428 | 575 | 77 | 756 | 935 | 876 | 253 | . 2 589 | 104 | 280 | 374 | 379 | 28 | 240 | 443 | 295 | 153 | . 3 323 | 368 | 251 | 598 | 43 | 907 | 200 | 659 | 358 | 908 | . 4 25 | 504 | 284 | 211 | 157 | 671 | 559 | 10 | 753 | 449 | . 5 767 | 485 | 868 | 796 | 659 | 551 | 305 | 198 | 116 | 140 | . 6 76 | 856 | 861 | 858 | 972 | 764 | 794 | 939 | 597 | 662 | . 7 953 | 756 | 122 | 113 | 516 | 165 | 132 | 923 | 354 | 803 | . 8 183 | 426 | 257 | 558 | 880 | 437 | 242 | 203 | 485 | 729 | . 9 864 | 483 | 671 | 327 | 508 | 310 | 75 | 511 | 657 | 626 | . Ca3 = pd.DataFrame(data) Ca3 . 0 1 2 3 4 5 6 7 8 9 . 0 128 | 673 | 220 | 297 | 412 | 837 | 827 | 112 | 701 | 53 | . 1 747 | 177 | 632 | 428 | 575 | 77 | 756 | 935 | 876 | 253 | . 2 589 | 104 | 280 | 374 | 379 | 28 | 240 | 443 | 295 | 153 | . 3 323 | 368 | 251 | 598 | 43 | 907 | 200 | 659 | 358 | 908 | . 4 25 | 504 | 284 | 211 | 157 | 671 | 559 | 10 | 753 | 449 | . 5 767 | 485 | 868 | 796 | 659 | 551 | 305 | 198 | 116 | 140 | . 6 76 | 856 | 861 | 858 | 972 | 764 | 794 | 939 | 597 | 662 | . 7 953 | 756 | 122 | 113 | 516 | 165 | 132 | 923 | 354 | 803 | . 8 183 | 426 | 257 | 558 | 880 | 437 | 242 | 203 | 485 | 729 | . 9 864 | 483 | 671 | 327 | 508 | 310 | 75 | 511 | 657 | 626 | .",
            "url": "https://veroberg.github.io/my_first_blog/blog/2021/01/20/My-Post.html",
            "relUrl": "/blog/2021/01/20/My-Post.html",
            "date": " • Jan 20, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://veroberg.github.io/my_first_blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://veroberg.github.io/my_first_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://veroberg.github.io/my_first_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}